<<Authentication>>
Authentication vs. Authorization
(인증 vs. 인가)
로그인 처리 vs. 권한부여

1. HTTP의 Stateless (무상태)
p.72 그림을 이해하자
메인스트림을 대갈통에 처박아라

1) 쿠키
2) 쿠키+세션

2. 로그인기능 구현
1) User모델 확인 p.73
2) create_users_table.php 마이그레이션 확인
3) 팅커로 작동확인함
$user = App\User::create([
'name'=>'장영진',
'email'=>'jangyj@yju.ac.kr',
'password'=>'bcrypt('password'),
]);
$user = App\User::create([
'name' => '장영진',
'email' => 'jangyj@yju.ac.kr',
'password' => bcrypt('password')
]);

4) 라우팅 코딩 : p.74

5) 테스트
php artisan serve

GET /protected
GET /auth/login
GET / auth/logout

3. auth 미들웨어 사용하기
미들웨어 개념 이해 : node.js 참고

- 로그인 후 로그인 여부 체크하는 미들웨어 : auth
p.77 라우팅 소스코드 수정

4. 라라벨 내장 사용자 인증 기능 사용하기
p.79의 명령은 버전업으로 실행 안됨(php artisan make:auth)
1) 컴포저로 ui 패키지 설치
composer require laravel/ui
2) 라라벨 내장 사용자 인증 기능 초기화 : scaffolding
php artisan ui:auth
3) 테스트 하기
GET /login

GET /register

4) 이쁘지 않아서 이쁘게 만들어 보기
php artisan ui vue --auth # php artisan ui react --auth
npm i
npm run dev

5. 패스워드 재설정 기능 구현
1) .env 파일 수정 : MAIL_DRIVER=smtp ====> MAIL_DRIVER=log
2) 보내는 사람 설정 : config/mail.php
3) 서버 재기동 : php artisan serve
4) GET /password/reset
5) storage/logs/laravel-DATESTAMP.log 확인
   http)//localhost:8000/password/reset/랜덤문자열?email=패스워드변경사용자메일주소