<<Controller>>
- Front Controller : web.php
  router는 controller이다? Yes
- General Controller
  각각 요청에 따라 다른 처리
1. 컨트롤러 작성
php artisan make:controller ProjectController
php artisan make:controller 모델명+Controller

php artisan make:model Project -m -f -c
php artisan make:model Project -a

2. 라우팅 설정
routes/web.php
// Route::get('/', '컨트롤명@메서드');
Route::get('/', 'ProjectController@index');

3. 라우팅 확인 php artisan route:ist

*RESTful

*URL구성방식
-RPC(Remote Procedure Call) : 프로시저 == 함수 == 기능
 GET /프로시저명?인자1=값1&인자2=값2
 GET /getDog?id=1
-REST(Representational State Transfer) : URL 주소를 리소스를 지정하는 것으로 이해
 GET /리소스명/리소스ID
 GET /dogs/1
REST하게 서비스를 구현 ==> RESTful 구현

* RESTful Controller 만들기
php artisan make:controller 컨트롤러명 --resource

1. php artisan make:controller ArticlesController --resource

2. routes/web.php
Route::resource('articles','ArticlesController');

3. ArticlesController.php를 수정
p.65

*RESTful 서비스 테스트:
포스트맨(Chrome 확장프로그램)
REST Client(VSCode 확장프로그램)
REST Client 사용법
1. 원하는 폴더에서 파일생성 : 확장자 -> .http 또는 .rest
  httpTest.php
2. 내용작성 양식
  HTTPMethod	URL			HTTPVersion
----------------------------------------------------------------------
  GET		http://127.0.0.1:8000/articles	HTTP/1.1
  ###

  POST		http://127.0.0.1:8000/articles	HTTP/1.1
  ###
3. 실행은 URL에 포커스 주고 Ctrl + Alt + R

*CSRF 공격방어 기능
-CSRF 공격 : Cross Site Request Forgery
CSRF Token 처리

---> 테스트를 위해 CSRF 공격방어 기능해제시키기
p.68

Route::resource()외에
p.69 여러 함수 존재
