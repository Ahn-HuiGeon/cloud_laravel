<<Eloquent ORM>>
- ORM : DB와 객체지향 프로그래밍 언어 사이에서 서로 데이터를 표현하고 다룰 수 있도록 서로 매핑하는 것 (Object Relational Mapping)
- R-DB ---> 관계
- ERD(Entity Relational Diagram) : 엔티티간의 관계를 설정, 상호작용 방법 확인

1. 02M(one to many) : 일대다
예) 사용자와 게시글
1) articles 테이블의 마이그레이션 설정
  - php artisan make:migration create_articles_table --create=articles
  - databases/migrations/TIMESTAMP_create_articles_table.php 수정: p82-83
  - php artisan migrate
2) 관계 설정
    관계이름을 정의하는 관례
    관계이름 : 테이블명_컬럼명_foreign articles_user_id_foreign
    - 모델에서 관계 설정
       php artisan make:model Article
(테이블 : 복수 / 모델 : 단수, 첫글자 대문자)
3) 관계설정 확인: 팅커
App\User::find(2)->articles()->create([
'title'=>'첫번째 게시글',
'content'=>'첫번째 게시글의 내용임.',
]);
App\User::find(2)->articles()->create([
'title'=>'두번째 게시글',
'content'=>'두번째 게시글의 내용임.',
]);
App\User::find(2)->articles()->create()->get();
App\User::find(2)->articles()->create()->first();

* 외래키 컬럼명과 메서드 이름과의 관례
- 외래키 컬럼명 : 참조하는모델명(첫글자 소문자)+_+참조하는테이블의컬럼명
   User, id ===> user_id
- 관례벗어나기
ex) 외래키 : writer_id
==>
app\Article.php
publid function writer(){
	return $this -> belongsTo(User::class, 'writer_id');
}
app\User.php
publid function articles(){
	return $this -> hasMany(Article::class, 'writer_id');
}
* One 쪽 모델 접근 메서드는 단수, Many 쪽은 복수로 메서드명 작성 권장

2. 다대다 (M2M, Many to Many)
ex) 게시글과 해시태그
하나의 게시글에는 다수의 해시태그 소유
하나의 해시태그는 다수의 게시글에서 사용가능
-  피벗 테이블이 사용
   articles(게시글), tags(해시태그), article_tag(pivot table)
* 피벗 테이블명 관례
참조하는 모델명의 알파벳순서로 모델명(소문자로시작하는)+_+모델명(소문자로시작하는)
1) 마이그레이션 작성
php artisan make:migration create_tags_table --create=tags
php artisan make:migration create_article_tag_table --create=article_tag
2) 마이그레이션 파일 수정 p.86-87
3) 마이그레이션 실행
4) 모델 작성
5) 모델에서 관계 설정
6) 테스트